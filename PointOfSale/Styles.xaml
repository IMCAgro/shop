<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:c="http://www.caliburnproject.org">

    <SolidColorBrush x:Key="BackgroundBrush" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="AccentColorBrush" Color="SteelBlue" />
    <SolidColorBrush x:Key="NormalColorBrush" Color="Black" />
    <SolidColorBrush x:Key="LabelColorBrush" Color="DarkGray" />

    <s:Double x:Key="NormalFontSize">30</s:Double>
    
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <!-- RoundButtonStyle -->
    <Style x:Key="RoundButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource NormalColorBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="38">
                        </Border>
                        <Border Name="Bd" CornerRadius="38" Margin="{TemplateBinding Padding}">
                            <Viewbox HorizontalAlignment="Stretch" VerticalAlignment="Stretch">                                
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextBlock.Foreground="{TemplateBinding Foreground}" />
                            </Viewbox>
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#25000000" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#35000000" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#45000000" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="PlusButtonContent">
        <Canvas Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="38" Height="38" Canvas.Left="19" Canvas.Top="19" Stretch="Fill" Fill="{StaticResource AccentColorBrush}" Data="F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z "/>
        </Canvas>
    </DataTemplate>

    <DataTemplate x:Key="MinusButtonContent">
        <Canvas Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="38" Height="6" Canvas.Left="19" Canvas.Top="35" Stretch="Fill" Fill="{StaticResource AccentColorBrush}" Data="F1 M 19,38L 57,38L 57,44L 19,44L 19,38 Z "/>
        </Canvas>        
    </DataTemplate>    

    <!-- FlatButtonStyle -->
    <Style x:Key="FlatButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource NormalColorBrush}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <!--<Setter Property="FontWeight" Value="Light" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}">
                        <Border Name="Bd" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#15000000" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#25000000" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#35000000" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- StoreButtonStyle -->
    <Style x:Key="StoreButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <!--<Setter Property="FontWeight" Value="Light" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border Name="Bd" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#15000000" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#25000000" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#35000000" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkStoreButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource StoreButtonStyle}">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="NoStyleButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" Margin="{TemplateBinding Padding}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource NormalColorBrush}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}">
                        <Border Name="Bd" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" TextBlock.Foreground="{TemplateBinding Foreground}" />
                                <Border Name="Underline" BorderThickness="0,0,0,3" BorderBrush="{TemplateBinding BorderBrush}" Visibility="Hidden" SnapsToDevicePixels="True" />
                             </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#15000000" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <!--<Setter TargetName="Bd" Property="Background" Value="#25000000" />-->
                            <Setter TargetName="Underline" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--<Trigger Property="IsLeftMouseButtonDown" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#35000000" />
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="FlatListBox" TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource FlatListBoxItemStyle}" />
    </Style>

    <ItemsPanelTemplate x:Key="PointOfSalePanelTemplate">
        <WrapPanel Orientation="Horizontal" />
    </ItemsPanelTemplate>
    
    <DataTemplate x:Key="PointOfSaleContentItemTemplate">
        <Grid Background="White" Margin="0,0,25,25" Width="250" Height="160" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Button Style="{StaticResource NoStyleButtonStyle}" c:Message.Attach="AddItem($dataContext)" Padding="10,10,10,25">
                <Image Source="{Binding ImageSource}" Margin="5" />
            </Button>

            <!-- Quantity Layer-->
            <Border Visibility="{Binding QuantityVisibility}" Background="#DDFFFFFF" SnapsToDevicePixels="True">
                <Grid Margin="20,0,20,25">
                    <TextBlock Text="{Binding Quantity}" Foreground="{StaticResource AccentColorBrush}" FontSize="50" HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Style="{StaticResource RoundButtonStyle}" ContentTemplate="{StaticResource PlusButtonContent}" c:Message.Attach="AddItem($dataContext)" VerticalAlignment="Center" />
                        <Button Style="{StaticResource RoundButtonStyle}" ContentTemplate="{StaticResource MinusButtonContent}" c:Message.Attach="RemoveItem($dataContext)" VerticalAlignment="Center" Margin="15,0,0,0" />
                    </StackPanel>
                </Grid>
            </Border>

            <Border SnapsToDevicePixels="True" VerticalAlignment="Bottom">
                <Grid Margin="20,5" VerticalAlignment="Center">
                    <TextBlock Text="{Binding Description}" FontSize="20" Foreground="{StaticResource AccentColorBrush}" HorizontalAlignment="Left" />
                    <TextBlock Text="{Binding Price, StringFormat=C}" FontSize="20" Foreground="{StaticResource AccentColorBrush}" HorizontalAlignment="Right" />
                </Grid>
            </Border>

            <Border BorderThickness="1" BorderBrush="#25000000" />
        </Grid>
    </DataTemplate>

    <Style x:Key="PointOfSaleContent" TargetType="{x:Type ItemsControl}">
        <Setter Property="ItemsPanel" Value="{StaticResource PointOfSalePanelTemplate}" />
        <Setter Property="ItemTemplate" Value="{StaticResource PointOfSaleContentItemTemplate}" />
    </Style>
</ResourceDictionary>